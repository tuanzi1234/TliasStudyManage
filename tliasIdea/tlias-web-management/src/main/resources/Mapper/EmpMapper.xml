<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.EmpMapper">
    <!--    根据id更新员工-->
    <update id="updateById">
        update emp
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="job != null">
                job = #{job},
            </if>
            <if test="salary != null">
                salary = #{salary},
            </if>
            <if test="deptId != null and deptId != ''">
                dept_id = #{deptId},
            </if>
            <if test="image != null and image != ''">
                image = #{image},
            </if>
            <if test="entryDate != null">
                entry_date = #{entryDate},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <!--    根据id批量删除员工-->
    <delete id="deleteByIds">
        delete from emp where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")" index="">
            #{id}
        </foreach>
    </delete>

    <!--    resultType: 查询返回的单条记录所封装的类型-->
    <!--   其中#{name}应当使用concat拼接字符串-->
    <select id="list" resultType="com.example.pojo.Emp">
        select e.*, d.name deptName
        from emp e left join dept d on e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                e.name like concat('%', #{name}, '%')
            </if>
            <if test="gender != null">
                and e.gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and e.entry_date between #{begin} and #{end}
            </if>
        </where>
        order by update_time desc
    </select>

    <!--    手动封装查询结果-->
    <resultMap id="empResultMap" type="com.example.pojo.Emp">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="phone" column="phone"/>
        <result property="job" column="job"/>
        <result property="salary" column="salary"/>
        <result property="image" column="image"/>
        <result property="entryDate" column="entry_date"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="deptId" column="dept_id"/>
        <collection property="exprList" ofType="com.example.pojo.EmpExpr">
            <id property="id" column="ee_id"/>
            <result property="empId" column="ee_id"/>
            <result property="begin" column="ee_begin"/>
            <result property="end" column="ee_end"/>
            <result property="company" column="ee_company"/>
            <result property="job" column="ee_job"/>
        </collection>
    </resultMap>

    <!-- 根据id查询员工基本信息以及工作经历 -->
    <select id="findById" resultMap="empResultMap">
        select e.*,
               ee.id      ee_id,
               ee.emp_id  ee_emp_id,
               ee.begin   ee_begin,
               ee.end     ee_end,
               ee.company ee_company,
               ee.job     ee_job
        from emp e
                 left join emp_expr ee on e.id = ee.emp_id
        where e.id = #{id}
    </select>

    <!--    统计每个职位的员工个数-->
    <select id="countByJob" resultType="java.util.Map">
        select (case
                    when job = 1 then '班主任'
                    when job = 2 then '讲师'
                    when job = 3 then '学工主管'
                    when job = 4 then '教研主管'
                    when job = 5 then '咨询师'
                    else '其他' end) as pos,
               count(*)              as num
        from emp
        group by job
        order by num
    </select>

    <!--    统计员工性别人数-->
    <select id="getEmpGenderData" resultType="java.util.Map">
        select if(gender = 1, '男', '女') name,
               count(*) as                value
        from emp
        group by gender
    </select>
    <!--    查询所有员工-->
    <select id="findAll" resultType="com.example.pojo.Emp">
        select *
        from emp
    </select>
</mapper>