<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.StudentMapper">
    <!--    添加学生信息-->
    <insert id="add">
        INSERT INTO student(name,
                            no,
                            gender,
                            phone,
                            id_card,
                            is_college,
                            address,
                            degree,
                            graduation_date,
                            clazz_id,
                            create_time,
                            update_time)
        VALUES (#{name},
                #{no},
                #{gender},
                #{phone},
                #{idCard},
                #{isCollege},
                #{address},
                #{degree},
                #{graduationDate},
                #{clazzId},
                #{createTime},
                #{updateTime})
    </insert>
    <!--    根据id更新学生信息-->
    <update id="updateById">
        UPDATE student
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="no != null">
                no = #{no},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="idCard != null">
                id_card = #{idCard},
            </if>
            <if test="isCollege != null">
                is_college = #{isCollege},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="degree != null">
                degree = #{degree},
            </if>
            <if test="graduationDate != null">
                graduation_date = #{graduationDate},
            </if>
            <if test="clazzId != null">
                clazz_id = #{clazzId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="violationCount != null">
                violation_count = #{violationCount},
            </if>
            <if test="violationScore != null">
                violation_score = #{violationScore},
            </if>
        </set>
        WHERE id = #{id}
    </update>
    <!--    根据id删除学生信息-->
    <delete id="deleteById">
        DELETE FROM student WHERE id in
        <foreach item="id" collection="ids" separator="," open="(" close=")" index="">
            #{id}
        </foreach>
    </delete>
    <!--    分页查询学生信息-->
    <select id="findByPage" resultType="com.example.pojo.Student">
        SELECT s.*, c.name clazzName
        FROM student s
        LEFT JOIN clazz c ON s.clazz_id = c.id
        <where>
            <if test="name != null and name != ''">
                AND s.name LIKE CONCAT('%',#{name},'%')
            </if>
            <if test="degree != null">
                AND s.degree = #{degree}
            </if>
            <if test="clazzId != null">
                AND s.clazz_id = #{clazzId}
            </if>
        </where>
        order by update_time desc
    </select>
    <!--    根据id查询学生信息-->
    <select id="findById" resultType="com.example.pojo.Student">
        SELECT s.*, c.name clazzName
        FROM student s
                 LEFT JOIN clazz c ON s.clazz_id = c.id
        WHERE s.id = #{id}
    </select>
    <select id="getStudentDegreeData" resultType="java.util.Map">
        select (case
                    when degree = 1 then '初中'
                    when degree = 2 then '高中'
                    when degree = 3 then '大专'
                    when degree = 4 then '本科'
                    when degree = 5 then '硕士'
                    when degree = 6 then '博士'
                    else '其他' end) as name,
               count(*)              as value
        from student
        group by degree
    </select>
    <select id="getStudentCountData" resultType="java.util.Map">
        SELECT c.name      AS clazzList,
               COUNT(s.id) AS dataList
        FROM clazz c
                 LEFT JOIN student s ON c.id = s.clazz_id
        GROUP BY c.name
    </select>
</mapper>